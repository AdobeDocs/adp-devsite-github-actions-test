# ---
# ###########################
# ###########################
# ## Pull request testing ##
# ###########################
# ###########################
# name: Latest Pull Request

# # Documentation:
# # - Workflow: https://help.github.com/en/articles/workflow-syntax-for-github-actions
# # - SuperLinter: https://github.com/github/super-linter
# # - Markdown linter: https://github.com/DavidAnson/markdownlint
# # - Link validation: https://github.com/remarkjs/remark-validate-links

# ######################################################
# # Start the job on a pull request to the main branch #
# ######################################################
# # on:
# #   pull_request:
# #     branches: [main]
# #     paths:
# #       - 'src/pages/**'

# ###############
# # Set the Job #
# ###############
# jobs:

#   ai-summary:
#     name: AI Summary on Changed Content
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'
          
#       - name: Enable Corepack for Yarn v3
#         run: corepack enable
        
#       - name: Install Yarn v3
#         uses: borales/actions-yarn@v3
#         with:
#           cmd: set version stable

#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

#       - name: Cache yarn dependencies
#         uses: actions/cache@v3
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       - name: Install dependencies and run script
#         uses: borales/actions-yarn@v3
#         env:
#           YARN_ENABLE_IMMUTABLE_INSTALLS: false
#           YARN_ENABLE_HARDENED_MODE: false
#         with:
#           cmd: install --mode=update-lockfile
          
#       - name: Run PR script
#         run: node src/pr-scripts.js
#         env:
#           PR_ID: ${{ github.event.pull_request.number }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Run AI metadata generation script
#         run: node src/ai-scripts.js
#         env:
#           AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
#           AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
#           FILE_NAME: "pr_content.txt"
          
#       - name: Run review PR script
#         run: node src/review-scripts.js
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           PR_ID: ${{ github.event.pull_request.number }}
